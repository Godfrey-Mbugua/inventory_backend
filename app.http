###create a new product
POST http://localhost:3000/products 
Content-Type: application/json

{
    "name": "dddadad",
    "description": "fdfdffdf",
    "price": 40,
    "quantityInStock": 1
}



###get all products
GET http://localhost:3000/products


###update  a product by id
PUT http://localhost:3000/products/1
Content-Type: application/json

{
    "name": "Updated Product Name",
    "description": "Updated product description.",
    "price": 50,
    "quantityInStock": 10
}


### Delete a product by ID
DELETE http://localhost:3000/products/1

### Create a new user
POST http://localhost:3000/authentication/register

Content-Type: application/json


{
    "username": "lester",
    "email": "lester@example.com",
    "password": "newuserpassword",
    "role": "manager"
}

### login admin
POST http://localhost:3000/authentication/login
Content-Type: application/json


{
    
    "email": "newuser@example.com",
    "password": "newuserpassword"
}




### Admin creating a new user
POST http://localhost:3000/authentication/register
Content-Type: application/json
Authorization: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInJvbGUiOiJhZG1pbiIsImlhdCI6MTczODMyNTc2NSwiZXhwIjoxNzM4MzI5MzY1fQ.0o21DEtGeGtagu2abMvWIrqWIDA3Yvru-0IFK3Khs8E

{
    "username": "newuser2",
    "email": "newuser2@example.com",
    "password": "newuserpassword2",
    "role": "user"
}











### Get all users
GET http://localhost:3000/users

### Get a user by ID
GET http://localhost:3000/users/1

### Update a user by ID
PUT http://localhost:3000/users/1
Content-Type: application/json
Role: admin

{
    "username": "updateduser",
    "email": "updateduser@example.com",
    "password": "updateduserpassword",
    "role": "admin"
}

### Delete a user by ID
DELETE http://localhost:3000/users/1
Role: admin

### Register a new user
POST http://localhost:3000/register
Content-Type: application/json

{
    "username": "newuser",
    "email": "newuser@example.com",
    "password": "newuserpassword",
    "role": "user"
}

### Login a user
POST http://localhost:3000/login
Content-Type: application/json

{
    "email": "newuser@example.com",
    "password": "newuserpassword"
}

### Verify a token
GET http://localhost:3000/verify
Authorization: Bearer YOUR_JWT_TOKEN_HERE

### Create a new inventory record
POST https://inventory-backend-u8wv.onrender.com/inventory
Content-Type: application/json

{
    "productid": 2,
    "quantityAvailable": 100,
    "reorderLevel": 20
}

### Get all inventory records
GET http://localhost:3000/inventory

### Get an inventory record by ID
GET http://localhost:3000/inventory/1

### Update an inventory record by ID
PUT http://localhost:3000/inventory/1
Content-Type: application/json

{
    "productid": 1,
    "quantityAvailable": 150,
    "reorderLevel": 30
}

### Delete an inventory record by ID
DELETE http://localhost:3000/inventory/1

### Create a new order
POST http://localhost:3000/orders
Content-Type: application/json

{
    "userid": 1,
    "productid": 2,
    "quantityOrdered": 10,
    "orderDate": "2023-10-01T00:00:00.000Z"
}

### Get all orders
GET http://localhost:3000/orders

### Get an order by ID
GET http://localhost:3000/orders/1

### Update an order by ID
PUT http://localhost:3000/orders/1
Content-Type: application/json

{
    "userid": 1,
    "productid": 1,
    "quantityOrdered": 15,
    "orderDate": "2023-10-01T00:00:00.000Z"
}

### Delete an order by ID
DELETE http://localhost:3000/orders/1

### Create a new sale
POST http://localhost:3000/sales
Content-Type: application/json

{
    "orderid": 2,
    "saleDate": "2023-10-01T00:00:00.000Z",
    "totalAmount": 100.00
}

### Get all sales
GET http://localhost:3000/sales

### Get a sale by ID
GET http://localhost:3000/sales/1

### Update a sale by ID
PUT http://localhost:3000/sales/1
Content-Type: application/json

{
    "orderid": 1,
    "saleDate": "2023-10-01T00:00:00.000Z",
    "totalAmount": 150.00
}

### Delete a sale by ID
DELETE http://localhost:3000/sales/1

### Create a new supplier
POST http://localhost:3000/suppliers
Content-Type: application/json

{
    "name": "New Supplier",
    "contactInfo": "Contact Info"
}

### Get all suppliers
GET http://localhost:3000/suppliers

### Get a supplier by ID
GET http://localhost:3000/suppliers/1

### Update a supplier by ID
PUT http://localhost:3000/suppliers/1
Content-Type: application/json

{
    "name": "Updated Supplier",
    "contactInfo": "Updated Contact Info"
}

### Delete a supplier by ID
DELETE http://localhost:3000/suppliers/1

### Create a new prediction
POST http://localhost:3000/predictions
Content-Type: application/json

{
    "productid": 2,
    "predictedDemand": 100,
    "predictionDate": "2023-10-01T00:00:00.000Z"
}

### Get all predictions
GET http://localhost:3000/predictions

### Get a prediction by ID
GET http://localhost:3000/predictions/1

### Update a prediction by ID
PUT http://localhost:3000/predictions/1
Content-Type: application/json
{
    "productid": 1,
    "predictedDemand": 150,
    "predictionDate": "2023-10-01T00:00:00.000Z"
}

### Delete a prediction by ID
DELETE http://localhost:3000/predictions/1






https://inventory-backend-u8wv.onrender.com





### Create a new user
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json

{
    "username": "lester",
    "email": "lester@example.com",
    "password": "newuserpassword",
    "role": "manager"
}

### Create a new supplier
POST https://inventory-backend-u8wv.onrender.com/suppliers
Content-Type: application/json

{
    "name": "New Supplier",
    "contactInfo": "Contact Info"
}

### Register a new user
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json

{
    "username": "shaq",
    "email": "newuser2@example.com",
    "password": "newuserpassword1",
    "role": "cashier in"
}

### Admin login
POST https://inventory-backend-u8wv.onrender.com/authentication/login
Content-Type: application/json

{
    "email": "admin@example.com",
    "password": "adminpassword"
}

### Create a new user (admin creating cashier in)
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json
Authorization: Bearer YOUR_ADMIN_JWT_TOKEN_HERE

{
    "username": "shaq",
    "email": "newuser2@example.com",
    "password": "newuserpassword1",
    "role": "cashier in"
}

### Create a new user (admin creating cashier out)
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json
Authorization: Bearer YOUR_ADMIN_JWT_TOKEN_HERE

{
    "username": "john",
    "email": "newuser3@example.com",
    "password": "newuserpassword2",
    "role": "cashier out"
}
{
    "username": "shaq",
    "email": "newuser2@example.com",
    "password": "newuserpassword1",
    "role": "cashier in"
}

### Create a new user (admin creating cashier out)
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json
Authorization: Bearer YOUR_ADMIN_JWT_TOKEN_HERE

{
    "username": "john",
    "email": "newuser3@example.com",
    "password": "newuserpassword2",
    "role": "cashier out"
}

### Create an admin user
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json

{
    "username": "admin",
    "email": "admin@example.com",
    "password": "adminpassword",
    "role": "admin"
}

### Admin login
POST https://inventory-backend-u8wv.onrender.com/authentication/login
Content-Type: application/json

{
    "email": "admin@example.com",
    "password": "adminpassword"
}

### Create a new user (admin creating cashier in)
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjUsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc0MTE3MTI1NiwiZXhwIjoxNzQxMTc0ODU2fQ.ALopcnPokAJ3knDCjHRqhXi4zUXgad0zp0jbmCgSpxc

{
    "username": "ray",
    "email": "newuser3@example.com",
    "password": "newuserpassword1",
    "role": "cashier in"
}

### Create a new user (admin creating cashier out)
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjUsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc0MTE3MTI1NiwiZXhwIjoxNzQxMTc0ODU2fQ.ALopcnPokAJ3knDCjHRqhXi4zUXgad0zp0jbmCgSpxc

{
    "username": "alex",
    "email": "newuser4@example.com",
    "password": "newuserpassword3",
    "role": "cashier out"
}


#include "stm32f4xx.h"

  
#include <stdint.h>  // Ensure correct integer types

#define LED_PIN 5  

void SysTick_Init(void);  
void LED_Init(void);
void SysTick_Handler(void);

volatile uint32_t tick = 0;

int main(void) {
    LED_Init();
    SysTick_Init();
    
    while (1) {
        // Main loop - The LED toggling happens in the ISR
    }
}

void LED_Init(void) {
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;  
    GPIOA->MODER &= ~(3 << (LED_PIN * 2)); 
    GPIOA->MODER |= (1 << (LED_PIN * 2));  
}

void SysTick_Init(void) {
    SysTick_Config(SystemCoreClock / 1000); // Use system clock for 1ms
}

void SysTick_Handler(void) {
    tick++;
    GPIOA->ODR ^= (1 << LED_PIN); 
}
### Create admin user (if not exists)
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json

{
    "username": "admin1",
    "email": "admin123@example.com",
    "password": "adminpassword1",
    "role": "admin"
}

### Admin login
POST https://inventory-backend-u8wv.onrender.com/authentication/login
Content-Type: application/json

{
    "email": "admin123@example.com",
    "password": "adminpassword1"
}

### Admin creating a manager
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3NDE3NzU5NjcsImV4cCI6MTc0MTc3OTU2N30.aORLVzjDmVVJrDdLK1Jbip5eLzzunNfqm7Fm7LQhwYw

{
    "username": "manager1",
    "email": "manager1@example.com",
    "password": "managerpass",
    "role": "manager"
}

### Manager login
POST https://inventory-backend-u8wv.onrender.com/authentication/login
Content-Type: application/json

{
    "email": "manager1@example.com",
    "password": "managerpass"
}

### Manager creating a cashier in
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE0LCJyb2xlIjoibWFuYWdlciIsImlhdCI6MTc0MTc3NzI0MSwiZXhwIjoxNzQxNzgwODQxfQ.kjyo8LQusPPz6_tXxQYUJFWxJNx9VaWa7tob0PYvUgk

{
    "username": "cashierin1",
    "email": "cashierin1@example.com",
    "password": "cashierpass",
    "role": "cashier in"
}

### Manager creating a cashier out
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE0LCJyb2xlIjoibWFuYWdlciIsImlhdCI6MTc0MTc3NzI0MSwiZXhwIjoxNzQxNzgwODQxfQ.kjyo8LQusPPz6_tXxQYUJFWxJNx9VaWa7tob0PYvUgk


{
    "username": "cashierout1",
    "email": "cashierout1@example.com",
    "password": "cashierpass",
    "role": "cashier out"
}

### Cashier In Login
POST https://inventory-backend-u8wv.onrender.com/authentication/login
Content-Type: application/json

{
    "email": "cashierin1@example.com",
    "password": "cashierpass"
}

### Cashier Out Login
POST https://inventory-backend-u8wv.onrender.com/authentication/login
Content-Type: application/json

{
    "email": "cashierout1@example.com",
    "password": "cashierpass"
}

### Test Cashier In Access (with token from login)
GET https://inventory-backend-u8wv.onrender.com/products
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTc3ODQ1MCwiZXhwIjoxNzQxNzgyMDUwfQ.kxVEE0jiww_b9W0duzqCf4fxR-jS0JKJqsK6rAbUH2Q

### Test Cashier Out Access (with token from login)
GET https://inventory-backend-u8wv.onrender.com/sales
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE2LCJyb2xlIjoiY2FzaGllciBvdXQiLCJpYXQiOjE3NDE3Nzk4NjUsImV4cCI6MTc0MTc4MzQ2NX0.7UXUTWAEVKkieoOY2KtLBhzUvar_FFFWikETQTjtNnc

Product Management Flow

### Create new product (using cashier in token)
POST https://inventory-backend-u8wv.onrender.com/products
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTc3ODQ1MCwiZXhwIjoxNzQxNzgyMDUwfQ.kxVEE0jiww_b9W0duzqCf4fxR-jS0JKJqsK6rAbUH2Q

{
    "name": "boots",
    "description": "soccer boots",
    "price": 1400,
    "quantityInStock": 70
}

### Get all products (cashier in only)
GET https://inventory-backend-u8wv.onrender.com/products
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTc3ODQ1MCwiZXhwIjoxNzQxNzgyMDUwfQ.kxVEE0jiww_b9W0duzqCf4fxR-jS0JKJqsK6rAbUH2Q

### Update product (cashier in only)
PUT https://inventory-backend-u8wv.onrender.com/products/1
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTc3ODQ1MCwiZXhwIjoxNzQxNzgyMDUwfQ.kxVEE0jiww_b9W0duzqCf4fxR-jS0JKJqsK6rAbUH2Q

{
    "name": "Updated Skates",
    "description": "4 wheels double lane",
    "price": 150,
    "quantityInStock": 75
}

### Delete product (cashier in only)
DELETE https://inventory-backend-u8wv.onrender.com/products/1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTc3ODQ1MCwiZXhwIjoxNzQxNzgyMDUwfQ.kxVEE0jiww_b9W0duzqCf4fxR-jS0JKJqsK6rAbUH2Q

### 5. Inventory Management Flow
### Create inventory record
POST https://inventory-backend-u8wv.onrender.com/inventory
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE2LCJyb2xlIjoiY2FzaGllciBvdXQiLCJpYXQiOjE3NDE3Nzk4NjUsImV4cCI6MTc0MTc4MzQ2NX0.7UXUTWAEVKkieoOY2KtLBhzUvar_FFFWikETQTjtNnc

{
    "productid": 2,
    "quantityAvailable": 70,
    "reorderLevel": 5
}

### Get all inventory
GET https://inventory-backend-u8wv.onrender.com/inventory
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE2LCJyb2xlIjoiY2FzaGllciBvdXQiLCJpYXQiOjE3NDE3Nzk4NjUsImV4cCI6MTc0MTc4MzQ2NX0.7UXUTWAEVKkieoOY2KtLBhzUvar_FFFWikETQTjtNnc
### 1. First create a new product (using cashier in token)
POST https://inventory-backend-u8wv.onrender.com/products
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTc3ODQ1MCwiZXhwIjoxNzQxNzgyMDUwfQ.kxVEE0jiww_b9W0duzqCf4fxR-jS0JKJqsK6rAbUH2Q

{
    "name": "Test Product",
    "description": "Test Description",
    "price": 1000,
    "quantityInStock": 50
}
###First get all inventory to see existing records
GET https://inventory-backend-u8wv.onrender.com/inventory
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE2LCJyb2xlIjoiY2FzaGllciBvdXQiLCJpYXQiOjE3NDE3Nzk4NjUsImV4cCI6MTc0MTc4MzQ2NX0.7UXUTWAEVKkieoOY2KtLBhzUvar_FFFWikETQTjtNnc


### 2. Create inventory record for the new product
POST https://inventory-backend-u8wv.onrender.com/inventory
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE2LCJyb2xlIjoiY2FzaGllciBvdXQiLCJpYXQiOjE3NDE3Nzk4NjUsImV4cCI6MTc0MTc4MzQ2NX0.7UXUTWAEVKkieoOY2KtLBhzUvar_FFFWikETQTjtNnc

{
    "productid": 2,
    "quantityAvailable": 70,
    "reorderLevel": 10
}

### 3. Get all inventory to verify creation
GET https://inventory-backend-u8wv.onrender.com/inventory
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE2LCJyb2xlIjoiY2FzaGllciBvdXQiLCJpYXQiOjE3NDE3Nzk4NjUsImV4cCI6MTc0MTc4MzQ2NX0.7UXUTWAEVKkieoOY2KtLBhzUvar_FFFWikETQTjtNnc

### Update inventory with correct ID (use ID from GET response)
PUT https://inventory-backend-u8wv.onrender.com/inventory/2
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE2LCJyb2xlIjoiY2FzaGllciBvdXQiLCJpYXQiOjE3NDE3Nzk4NjUsImV4cCI6MTc0MTc4MzQ2NX0.7UXUTWAEVKkieoOY2KtLBhzUvar_FFFWikETQTjtNnc

{
    "productid": 3,
    "quantityAvailable": 50,
    "reorderLevel": 10
}

### 4. Update inventory with correct ID
PUT https://inventory-backend-u8wv.onrender.com/inventory/2
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE2LCJyb2xlIjoiY2FzaGllciBvdXQiLCJpYXQiOjE3NDE3Nzk4NjUsImV4cCI6MTc0MTc4MzQ2NX0.7UXUTWAEVKkieoOY2KtLBhzUvar_FFFWikETQTjtNnc

{
    "productid": 5,
    "quantityAvailable": 50,
    "reorderLevel": 10
}

### 6. Order Management Flow
### Create order
POST https://inventory-backend-u8wv.onrender.com/orders
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTc3ODQ1MCwiZXhwIjoxNzQxNzgyMDUwfQ.kxVEE0jiww_b9W0duzqCf4fxR-jS0JKJqsK6rAbUH2Q


{
    "userid": 1,
    "productid": 1,
    "quantityOrdered": 5,
    "orderDate": "2024-03-05T10:00:00.000Z"
}

### Get all orders
GET https://inventory-backend-u8wv.onrender.com/orders
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTc3ODQ1MCwiZXhwIjoxNzQxNzgyMDUwfQ.kxVEE0jiww_b9W0duzqCf4fxR-jS0JKJqsK6rAbUH2Q

### 7. Sales Management Flow
### Create sale
POST https://inventory-backend-u8wv.onrender.com/sales
Content-Type: application/json
Authorization: Bearer {{cashierOutToken}}

{
    "orderid": 1,
    "totalAmount": 500,
    "saleDate": "2024-03-05T10:30:00.000Z"
}

### Get all sales
GET https://inventory-backend-u8wv.onrender.com/sales
Authorization: Bearer {{cashierOutToken}}

### 8. Supplier Management Flow
### Create supplier
POST https://inventory-backend-u8wv.onrender.com/suppliers
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTg2MzI3NSwiZXhwIjoxNzQxODY2ODc1fQ.DnVKnow571dwDmdWPsX8jrwndRlBZw9uSiixzYetFeQ

{
    "name": "Test Supplier2",
    "contactInfo": "supplier2@test.com"
}

### Get all suppliers
GET https://inventory-backend-u8wv.onrender.com/suppliers
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTg2MzI3NSwiZXhwIjoxNzQxODY2ODc1fQ.DnVKnow571dwDmdWPsX8jrwndRlBZw9uSiixzYetFeQ

### 9. Error Cases Testing
### Try to create manager with cashier token
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTg2MzI3NSwiZXhwIjoxNzQxODY2ODc1fQ.DnVKnow571dwDmdWPsX8jrwndRlBZw9uSiixzYetFeQ
{
    "username": "manager2",
    "email": "manager2@example.com",
    "password": "managerpass",
    "role": "manager"
}

### Try to create cashier with wrong role
POST https://inventory-backend-u8wv.onrender.com/authentication/register
Content-Type: application/json
Authorization: Bearer {{managerToken}}

{
    "username": "invalidcashier",
    "email": "invalid@example.com",
    "password": "cashierpass",
    "role": "invalid_role"
}

### Try to access without token
GET https://inventory-backend-u8wv.onrender.com/products

### Try to access with expired token
GET https://inventory-backend-u8wv.onrender.com/products
Authorization: Bearer expired.token.here
### 1. Login as Cashier In to get fresh token
POST https://inventory-backend-u8wv.onrender.com/authentication/login
Content-Type: application/json

{
    "email": "cashierin1@example.com",
    "password": "cashierpass"
}

### 2. Use the new token from the login response above
GET https://inventory-backend-u8wv.onrender.com/products
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTg1NzEwNCwiZXhwIjoxNzQxODYwNzA0fQ.EhpzedLm_MLN46UF40Y7KPBi3FfTbJt5qQ7lkUpYeyw

### 3. Create new product with the fresh token
POST https://inventory-backend-u8wv.onrender.com/products
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTg1NzEwNCwiZXhwIjoxNzQxODYwNzA0fQ.EhpzedLm_MLN46UF40Y7KPBi3FfTbJt5qQ7lkUpYeyw

{
    "name": "bicycles",
    "description": "mountain bikes",
    "price": 1000,
    "quantityInStock": 50
}
### 6. Order Management Flow (using fresh cashier in token)
### 1. First login as Cashier In to get fresh token
POST https://inventory-backend-u8wv.onrender.com/authentication/login
Content-Type: application/json

{
    "email": "cashierin1@example.com",
    "password": "cashierpass"
}

### 2. Create order with fresh token (Copy the token from login response above)
POST https://inventory-backend-u8wv.onrender.com/orders
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTkzNzU1MSwiZXhwIjoxNzQxOTQxMTUxfQ.MszhKuhfl7lIBFBJm71VSQ7SN_gsxPvQYWAaxkUfBDgE

{
    "userid": 15,
    "productid": 6,
    "quantityOrdered": 5,
    "orderDate": "2024-03-14T10:00:00.000Z"
}
### Get order by ID
GET https://inventory-backend-u8wv.onrender.com/orders/1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTkzNzU1MSwiZXhwIjoxNzQxOTQxMTUxfQ.MszhKuhfl7lIBFBJm71VSQ7SN_gsxPvQYWAaxkUfBDg
### Update order
PUT https://inventory-backend-u8wv.onrender.com/orders/1
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTg2MzcxMCwiZXhwIjoxNzQxODY3MzEwfQ.Zow7bCSuwC0CG7EmFEPo1Fg2n1vq1gt9Mk8l351SV98

{
    "userid": 15,
    "productid": 2,
    "quantityOrdered": 5,
    "orderDate": "2024-03-13T11:00:00.000Z"
}

### Delete order
DELETE https://inventory-backend-u8wv.onrender.com/orders/1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJyb2xlIjoiY2FzaGllciBpbiIsImlhdCI6MTc0MTg2MzcxMCwiZXhwIjoxNzQxODY3MzEwfQ.Zow7bCSuwC0CG7EmFEPo1Fg2n1vq1gt9Mk8l351SV98
